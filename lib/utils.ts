import { type ClassValue, clsx } from "clsx";
import { twMerge } from "tailwind-merge";
import { format } from "date-fns";
import { utcToZonedTime } from "date-fns-tz";

// generated by shadcn
export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs));
}

// created by chatgpt
export function isBase64Image(imageData: string) {
  const base64Regex = /^data:image\/(png|jpe?g|gif|webp);base64,/;
  return base64Regex.test(imageData);
}

// created by chatgpt
export function formatDateString(dateString: string) {
  const date = new Date(dateString);
  const timeZone = "Asia/Jakarta";
  
  const zonedDate = utcToZonedTime(date, timeZone);

  const formattedTime = format(zonedDate, "HH:mm");
  const formattedDate = format(zonedDate, "dd MMMM yyyy");

  return `${formattedTime} - ${formattedDate}`;
}


// created by chatgpt
export function formatThreadCount(count: number): string {
  if (count === 0) {
    return "No Threads";
  } else {
    const threadCount = count.toString().padStart(2, "0");
    const threadWord = count === 1 ? "Thread" : "Threads";
    return `${threadCount} ${threadWord}`;
  }
}
